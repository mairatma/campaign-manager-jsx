{"version":3,"sources":["Ajax.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;KAMM;;;;;OAWE,qDAAqB,YAAY;AACvC,OAAI,UAAU,EAAV,CADmC;AAEvC,OAAI,CAAC,UAAD,EAAa;AAChB,WAAO,OAAP,CADgB;IAAjB;AAGA,OAAI,QAAQ,WAAW,KAAX,CAAiB,MAAjB,CAAR,CALmC;AAMvC,QAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,MAAM,MAAN,EAAc,GAAlC,EAAuC;AACtC,QAAI,QAAQ,MAAM,CAAN,EAAS,OAAT,CAAiB,IAAjB,CAAR,CADkC;AAEtC,QAAI,QAAQ,CAAR,EAAW;AACd,SAAI,OAAO,MAAM,CAAN,EAAS,SAAT,CAAmB,CAAnB,EAAsB,KAAtB,CAAP,CADU;AAEd,SAAI,QAAQ,MAAM,CAAN,EAAS,SAAT,CAAmB,QAAQ,CAAR,CAA3B,CAFU;AAGd,aAAQ,IAAR,CAAa;AACZ,YAAM,IAAN;AACA,aAAO,KAAP;MAFD,EAHc;KAAf;IAFD;AAWA,UAAO,OAAP,CAjBuC;;;AAXnC,OA2CE,2BAAQ,KAAK,QAAQ,MAAM,aAAa,YAAY,aAAa,UAAU;AACjF,OAAI,UAAU,IAAI,cAAJ,EAAV,CAD6E;;AAGjF,OAAI,UAAU,gCAAY,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACnD,YAAQ,MAAR,GAAiB,YAAW;AAC3B,SAAI,QAAQ,OAAR,EAAiB;AACpB,cAAQ,OAAR,GADoB;AAEpB,aAFoB;MAArB;AAIA,aAAQ,OAAR,EAL2B;KAAX,CADkC;AAQnD,YAAQ,OAAR,GAAkB,YAAW;AAC5B,SAAI,QAAQ,IAAI,KAAJ,CAAU,eAAV,CAAR,CADwB;AAE5B,WAAM,OAAN,GAAgB,OAAhB,CAF4B;AAG5B,YAAO,KAAP,EAH4B;KAAX,CARiC;IAA1B,CAAZ,CAaX,SAbW,CAaD,UAAS,MAAT,EAAiB;AAC7B,YAAQ,KAAR,GAD6B;AAE7B,UAAM,MAAN,CAF6B;IAAjB,CAbC,CAgBX,UAhBW,CAgBA,YAAW;AACxB,iBAAa,OAAb,EADwB;IAAX,CAhBV,CAH6E;;AAuBjF,OAAI,UAAJ,EAAgB;AACf,UAAM,kBAAQ,GAAR,EAAa,yBAAb,CAAuC,UAAvC,EAAmD,QAAnD,EAAN,CADe;IAAhB;;AAIA,WAAQ,IAAR,CAAa,MAAb,EAAqB,GAArB,EAA0B,CAAC,QAAD,CAA1B,CA3BiF;;AA6BjF,OAAI,WAAJ,EAAiB;AAChB,gBAAY,KAAZ,GAAoB,OAApB,CAA4B,UAAS,IAAT,EAAe;AAC1C,aAAQ,gBAAR,CAAyB,IAAzB,EAA+B,YAAY,MAAZ,CAAmB,IAAnB,EAAyB,IAAzB,CAA8B,IAA9B,CAA/B,EAD0C;KAAf,CAA5B,CADgB;IAAjB;;AAMA,WAAQ,IAAR,CAAa,YAAK,KAAL,CAAW,IAAX,IAAmB,IAAnB,GAA0B,IAA1B,CAAb,CAnCiF;;AAqCjF,OAAI,YAAK,eAAL,CAAqB,WAArB,CAAJ,EAAuC;AACtC,QAAI,UAAU,WAAW,YAAW;AACnC,aAAQ,MAAR,CAAe,iBAAf,EADmC;KAAX,EAEtB,WAFW,CAAV,CADkC;IAAvC;;AAMA,UAAO,OAAP,CA3CiF;;;SA3C7E;;;mBA2FS","file":"node_modules/metal-ajax/src/Ajax.js","sourcesContent":["'use strict';\n\nimport { core } from 'metal';\nimport Uri from 'metal-uri';\nimport { CancellablePromise as Promise } from 'metal-promise';\n\nclass Ajax {\n\n\t/**\n\t * XmlHttpRequest's getAllResponseHeaders() method returns a string of\n\t * response headers according to the format described on the spec:\n\t * {@link http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method}.\n\t * This method parses that string into a user-friendly name/value pair\n\t * object.\n\t * @param {string} allHeaders All headers as string.\n\t * @return {!Array.<Object<string, string>>}\n\t */\n\tstatic parseResponseHeaders(allHeaders) {\n\t\tvar headers = [];\n\t\tif (!allHeaders) {\n\t\t\treturn headers;\n\t\t}\n\t\tvar pairs = allHeaders.split('\\u000d\\u000a');\n\t\tfor (var i = 0; i < pairs.length; i++) {\n\t\t\tvar index = pairs[i].indexOf('\\u003a\\u0020');\n\t\t\tif (index > 0) {\n\t\t\t\tvar name = pairs[i].substring(0, index);\n\t\t\t\tvar value = pairs[i].substring(index + 2);\n\t\t\t\theaders.push({\n\t\t\t\t\tname: name,\n\t\t\t\t\tvalue: value\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn headers;\n\t}\n\n\t/**\n\t * Requests the url using XMLHttpRequest.\n\t * @param {!string} url\n\t * @param {!string} method\n\t * @param {?string} body\n\t * @param {MultiMap=} opt_headers\n\t * @param {MultiMap=} opt_params\n\t * @param {number=} opt_timeout\n\t * @param {boolean=} opt_sync\n\t * @return {Promise} Deferred ajax request.\n\t * @protected\n\t */\n\tstatic request(url, method, body, opt_headers, opt_params, opt_timeout, opt_sync) {\n\t\tvar request = new XMLHttpRequest();\n\n\t\tvar promise = new Promise(function(resolve, reject) {\n\t\t\trequest.onload = function() {\n\t\t\t\tif (request.aborted) {\n\t\t\t\t\trequest.onerror();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(request);\n\t\t\t};\n\t\t\trequest.onerror = function() {\n\t\t\t\tvar error = new Error('Request error');\n\t\t\t\terror.request = request;\n\t\t\t\treject(error);\n\t\t\t};\n\t\t}).thenCatch(function(reason) {\n\t\t\trequest.abort();\n\t\t\tthrow reason;\n\t\t}).thenAlways(function() {\n\t\t\tclearTimeout(timeout);\n\t\t});\n\n\t\tif (opt_params) {\n\t\t\turl = new Uri(url).addParametersFromMultiMap(opt_params).toString();\n\t\t}\n\n\t\trequest.open(method, url, !opt_sync);\n\n\t\tif (opt_headers) {\n\t\t\topt_headers.names().forEach(function(name) {\n\t\t\t\trequest.setRequestHeader(name, opt_headers.getAll(name).join(', '));\n\t\t\t});\n\t\t}\n\n\t\trequest.send(core.isDef(body) ? body : null);\n\n\t\tif (core.isDefAndNotNull(opt_timeout)) {\n\t\t\tvar timeout = setTimeout(function() {\n\t\t\t\tpromise.cancel('Request timeout');\n\t\t\t}, opt_timeout);\n\t\t}\n\n\t\treturn promise;\n\t}\n\n}\n\nexport default Ajax;\n"],"sourceRoot":"/source/"}