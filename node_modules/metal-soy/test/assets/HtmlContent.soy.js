/* jshint ignore:start */
import Component from 'metal-component/src/Component';
import Soy from '../../src/Soy';
var templates;
goog.loadModule(function(exports) {

// This file was automatically generated from HtmlContent.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace HtmlContent.
 * @public
 */

goog.module('HtmlContent.incrementaldom');

/** @suppress {extraRequire} */
var soy = goog.require('soy');
/** @suppress {extraRequire} */
var soydata = goog.require('soydata');
/** @suppress {extraRequire} */
goog.require('goog.asserts');
/** @suppress {extraRequire} */
goog.require('soy.asserts');
/** @suppress {extraRequire} */
goog.require('goog.i18n.bidi');
var IncrementalDom = goog.require('incrementaldom');
var ie_open = IncrementalDom.elementOpen;
var ie_close = IncrementalDom.elementClose;
var ie_void = IncrementalDom.elementVoid;
var ie_open_start = IncrementalDom.elementOpenStart;
var ie_open_end = IncrementalDom.elementOpenEnd;
var itext = IncrementalDom.text;
var iattr = IncrementalDom.attr;


/**
 * @param {{
 *    content: (!soydata.SanitizedHtml|string)
 * }} opt_data
 * @param {(null|undefined)=} opt_ignored
 * @param {Object<string, *>=} opt_ijData
 * @return {void}
 * @suppress {checkTypes}
 */
function $render(opt_data, opt_ignored, opt_ijData) {
  soy.asserts.assertType((opt_data.content instanceof Function) || (opt_data.content instanceof soydata.UnsanitizedText) || goog.isString(opt_data.content), 'content', opt_data.content, 'Function');
  var content = /** @type {Function} */ (opt_data.content);
  ie_open('div');
    content();
  ie_close('div');
}
exports.render = $render;
if (goog.DEBUG) {
  $render.soyTemplateName = 'HtmlContent.render';
}

exports.render.params = ["content"];
exports.render.types = {"content":"html"};
templates = exports;
return exports;

});

class HtmlContent extends Component {}
Soy.register(HtmlContent, templates);
export { HtmlContent, templates };
export default templates;
/* jshint ignore:end */
